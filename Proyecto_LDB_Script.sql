----------------------------------- Lenguajes de Bases de Datos - Proyecto Final (Grupo #4) -----------------------------------
------------- Dennis Serrano Barquero | Nicole Monge Gamboa | Wimmer Madrigal Miranda | Yoswell Gamboa Rodríguez --------------
SET SERVEROUTPUT ON;
GRANT UNLIMITED TABLESPACE TO "proyecto";

----------------------------------------------- Creación de las Tablas - Inicio -----------------------------------------------
--------------------------------------------------- Tabla Clientes - Inicio ---------------------------------------------------
CREATE TABLE clientes(
    id                  NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    nombre              VARCHAR2(30) NOT NULL,
    primer_apellido     VARCHAR2(50) NOT NULL,
    segundo_apellido    VARCHAR2(50) NOT NULL,
    correo              VARCHAR2(100) NOT NULL,
    telefono            NUMBER NOT NULL
);
ALTER TABLE clientes ADD CONSTRAINT clientes_pk PRIMARY KEY(id);
---------------------------------------------------- Tabla Clientes - Fin -----------------------------------------------------

----------------------------------------------------- Tabla Cola - Inicio -----------------------------------------------------
CREATE TABLE cola(
    id          NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    equipos_id  NUMBER NOT NULL,
    guia_cola   VARCHAR2(25) NOT NULL
);
ALTER TABLE cola ADD CONSTRAINT cola_pk PRIMARY KEY(id);
------------------------------------------------------ Tabla Cola - Fin -------------------------------------------------------


--------------------------------------------------- Tabla Equipos - Inicio ----------------------------------------------------
CREATE TABLE equipos(
    id                      NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    reporte_tecnico_id      NUMBER NOT NULL,
    estado_id               NUMBER NOT NULL,
    numero_serie            VARCHAR2(25) NOT NULL,
    modelo                  VARCHAR2(25) NOT NULL,
    descripcion_problema    VARCHAR2(100) NOT NULL,
    accesorios              VARCHAR2(50) NOT NULL
);
ALTER TABLE equipos ADD CONSTRAINT equipos_pk PRIMARY KEY(id);
----------------------------------------------------- Tabla Equipos - Fin -----------------------------------------------------

---------------------------------------------------- Tabla Estado - Inicio ----------------------------------------------------
CREATE TABLE estado(
    id          NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    clientes_id NUMBER NOT NULL,
    descripcion VARCHAR2(100) NOT NULL
);
ALTER TABLE estado ADD CONSTRAINT estado_pk PRIMARY KEY(id);
----------------------------------------------------- Tabla Estado - Fin ------------------------------------------------------

--------------------------------------------------- Tabla Factura - Inicio ----------------------------------------------------
CREATE TABLE factura(
    id          NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    clientes_id NUMBER NOT NULL,
    descripcion VARCHAR2(100) NOT NULL,
    costo       NUMBER NOT NULL,
    iva         NUMBER NOT NULL,
    total       DECIMAL NOT NULL
);
ALTER TABLE factura ADD CONSTRAINT factura_pk PRIMARY KEY(id);
----------------------------------------------------- Tabla Factura - Fin -----------------------------------------------------

-------------------------------------------------- Tabla Inventario - Inicio --------------------------------------------------
CREATE TABLE inventario(
    id                  NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    productos_nuevos_id NUMBER NOT NULL,
    productos_usados_id NUMBER NOT NULL,
    repuestos_usados_id NUMBER NOT NULL,
    repuestos_nuevos_id NUMBER NOT NULL
);
ALTER TABLE inventario ADD CONSTRAINT inventario_pk PRIMARY KEY(id);
--------------------------------------------------- Tabla Inventario - Fin ----------------------------------------------------

----------------------------------------------- Tabla Productos Nuevos - Inicio -----------------------------------------------
CREATE TABLE productos_nuevos(
    id              NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    codigo          VARCHAR2(50) NOT NULL,
    nombre          VARCHAR2(50) NOT NULL,
    cantidad_stock  NUMBER NOT NULL,
    accesorios      VARCHAR2(50) NOT NULL,
    estado          VARCHAR2(50),
    precio          FLOAT NOT NULL
);
ALTER TABLE productos_nuevos ADD CONSTRAINT productos_usadosv1_pk PRIMARY KEY(id);
------------------------------------------------ Tabla Productos Nuevos - Fin -------------------------------------------------

----------------------------------------------- Tabla Productos Usados - Inicio -----------------------------------------------
CREATE TABLE productos_usados(
    id              NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    codigo          VARCHAR2(50) NOT NULL,
    nombre          VARCHAR2(50) NOT NULL,
    cantidad_stock  NUMBER NOT NULL,
    accesorios      VARCHAR2(50) NOT NULL,
    estado          VARCHAR2(50),
    precio          FLOAT NOT NULL
);
ALTER TABLE productos_usados ADD CONSTRAINT productos_usados_pk PRIMARY KEY(id);
------------------------------------------------ Tabla Productos Usados - Fin -------------------------------------------------

----------------------------------------------- Tabla Reporte Técnico - Inicio ------------------------------------------------
CREATE TABLE reporte_tecnico(
    id                      NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    problema_diagnostico    VARCHAR2(100) NOT NULL,
    descripcion             VARCHAR2(100) NOT NULL,
    costo                   FLOAT NOT NULL
);
ALTER TABLE reporte_tecnico ADD CONSTRAINT reporte_tecnico_pk PRIMARY KEY(id);
------------------------------------------------- Tabla Reporte Técnico - Fin -------------------------------------------------

----------------------------------------------- Tabla Repuestos Nuevos - Inicio -----------------------------------------------
CREATE TABLE repuestos_nuevos(
    id              NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    codigo          VARCHAR2(50) NOT NULL,
    nombre          VARCHAR2(50) NOT NULL,
    cantidad_stock  NUMBER NOT NULL,
    accesorios      VARCHAR2(50) NOT NULL,
    estado          VARCHAR2(50),
    precio          FLOAT NOT NULL
);
ALTER TABLE repuestos_nuevos ADD CONSTRAINT repuestos_usadosv1_pk PRIMARY KEY(id);
------------------------------------------------ Tabla Repuestos Nuevos - Fin -------------------------------------------------

----------------------------------------------- Tabla Repuestos Usados - Inicio -----------------------------------------------
CREATE TABLE repuestos_usados(
    id              NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    codigo          VARCHAR2(50) NOT NULL,
    nombre          VARCHAR2(50) NOT NULL,
    cantidad_stock  NUMBER NOT NULL,
    accesorios      VARCHAR2(50) NOT NULL,
    estado          VARCHAR2(50),
    precio          FLOAT NOT NULL
);
ALTER TABLE repuestos_usados ADD CONSTRAINT productos_usadosv1_pkv1 PRIMARY KEY(id);
------------------------------------------------ Tabla Repuestos Usados - Fin -------------------------------------------------

---------------------------------------------------- Tabla Taller - Inicio ----------------------------------------------------
CREATE TABLE taller(
    id          NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    equipos_id  NUMBER NOT NULL,
    clientes_id NUMBER NOT NULL
);
ALTER TABLE taller ADD CONSTRAINT taller_pk PRIMARY KEY(id);
----------------------------------------------------- Tabla Taller - Fin ------------------------------------------------------

---------------------------------------------------- Tabla Tienda - Inicio ----------------------------------------------------
CREATE TABLE tienda(
    id              NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    taller_id       NUMBER NOT NULL,
    inventario_id   NUMBER NOT NULL,
    clientes_id     NUMBER NOT NULL
);
ALTER TABLE tienda ADD CONSTRAINT tienda_pk PRIMARY KEY(id);
----------------------------------------------------- Tabla Tienda - Fin ------------------------------------------------------

--------------------------------------------------- Tabla Usuarios - Inicio ---------------------------------------------------

CREATE TABLE usuarios(
    id          NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    usuario     VARCHAR2(30) NOT NULL,
    contrasena  VARCHAR2(30) NOT NULL
);
ALTER TABLE usuarios ADD CONSTRAINT usuarios_pk PRIMARY KEY(id);
---------------------------------------------------- Tabla Usuarios - Fin -----------------------------------------------------

------------------------------------------ Tabla de Auditoría para Clientes - Inicio ------------------------------------------
CREATE TABLE log_clientes (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    nombre VARCHAR2(30) NOT NULL,
    primer_apellido VARCHAR2(50) NOT NULL,
    segundo_apellido VARCHAR2(50) NOT NULL,
    correo VARCHAR2(100) NOT NULL,
    telefono NUMBER NOT NULL,
    accion_realizada VARCHAR2(50),
 	usuario_elimina VARCHAR2(50),
 	fecha_elimina TIMESTAMP
);
ALTER TABLE log_clientes ADD CONSTRAINT log_clientes_pk PRIMARY KEY(id);
------------------------------------------- Tabla de Auditoría para Clientes - Fin --------------------------------------------
------------------------------------------------ Creación de las Tablas - Fin -------------------------------------------------

---------------------------------------------- Creación de Foreign Keys - Inicio ----------------------------------------------
ALTER TABLE cola ADD CONSTRAINT cola_equipos_fk
FOREIGN KEY(equipos_id) REFERENCES equipos (id);

ALTER TABLE equipos ADD CONSTRAINT equipos_estado_fk
FOREIGN KEY(estado_id) REFERENCES estado(id);

ALTER TABLE equipos ADD CONSTRAINT equipos_reporte_tecnico_fk
FOREIGN KEY(reporte_tecnico_id) REFERENCES reporte_tecnico(id);

ALTER TABLE estado ADD CONSTRAINT estado_clientes_fk
FOREIGN KEY(clientes_id) REFERENCES clientes(id);

ALTER TABLE factura ADD CONSTRAINT factura_clientes_fk
FOREIGN KEY(clientes_id) REFERENCES clientes(id);

ALTER TABLE inventario ADD CONSTRAINT inventario_productos_nuevos_fk
FOREIGN KEY(productos_nuevos_id) REFERENCES productos_nuevos(id);

ALTER TABLE inventario ADD CONSTRAINT inventario_productos_usados_fk
FOREIGN KEY(productos_usados_id) REFERENCES productos_usados(id);

ALTER TABLE inventario ADD CONSTRAINT inventario_repuestos_nuevos_fk
FOREIGN KEY(repuestos_nuevos_id) REFERENCES repuestos_nuevos(id);

ALTER TABLE inventario ADD CONSTRAINT inventario_repuestos_usados_fk
FOREIGN KEY(repuestos_usados_id) REFERENCES repuestos_usados(id);

ALTER TABLE taller ADD CONSTRAINT taller_clientes_fk
FOREIGN KEY(clientes_id) REFERENCES clientes(id);

ALTER TABLE taller ADD CONSTRAINT taller_equipos_fk
FOREIGN KEY(equipos_id) REFERENCES equipos(id);

ALTER TABLE tienda ADD CONSTRAINT tienda_clientes_fk
FOREIGN KEY(clientes_id) REFERENCES clientes(id);

ALTER TABLE tienda ADD CONSTRAINT tienda_inventario_fk
FOREIGN KEY(inventario_id) REFERENCES inventario(id);

ALTER TABLE tienda ADD CONSTRAINT tienda_taller_fk
FOREIGN KEY(taller_id) REFERENCES taller(id);
----------------------------------------------- Creación de Foreign Keys - Fin ------------------------------------------------

----------------------------------------- Inserciones de Datos en las Tablas - Inicio -----------------------------------------
--------------------------------------------------- Tabla Clientes - Inicio ---------------------------------------------------
INSERT INTO clientes(nombre,primer_apellido, segundo_apellido, correo, telefono)
    VALUES('David', 'Montero', 'Gomez','david@gmail.com',89563663);
INSERT INTO clientes(nombre,primer_apellido, segundo_apellido, correo, telefono)
    VALUES('Tommy', 'Hernandez', 'Soto','tommy@gmail.com',98895463);
INSERT INTO clientes(nombre,primer_apellido, segundo_apellido, correo, telefono)
    VALUES('Jerry', 'Sojo', 'Morales','jerry@gmail.com',41526398);
INSERT INTO clientes(nombre,primer_apellido, segundo_apellido, correo, telefono)
    VALUES('Santi', 'Gonzalez', 'Sanabria','santi@gmail.com',7485912);
INSERT INTO clientes(nombre,primer_apellido, segundo_apellido, correo, telefono)
    VALUES('Josefina', 'Fernanez', 'Monge','josefi@gmail.com',63652541);
---------------------------------------------------- Tabla Clientes - Fin -----------------------------------------------------

----------------------------------------------- Tabla Productos Nuevos - Inicio -----------------------------------------------
INSERT INTO productos_nuevos(codigo, nombre, cantidad_stock, accesorios, estado, precio)
    VALUES('A56D','Control de XBox',25,'Control para el XBox', 'Nuevo', 15000);
INSERT INTO productos_nuevos(codigo, nombre, cantidad_stock, accesorios, estado, precio)
    VALUES('F53C','Nintendo Wii', 20, 'Cable de video', 'Nuevo', 150000);
INSERT INTO productos_nuevos(codigo, nombre, cantidad_stock, accesorios, estado, precio)
    VALUES('L09P','Play Station 5', 15, 'Mando de la play5', 'Nuevo', 25000);
INSERT INTO productos_nuevos(codigo, nombre, cantidad_stock, accesorios, estado, precio)
    VALUES('G23R','Play Station 4', 50, 'Mando de la Play4', 'Nuevo', 15000);
INSERT INTO productos_nuevos(codigo, nombre, cantidad_stock, accesorios, estado, precio)
    VALUES('N11M','Monitor Dell', 50,'Panalla Dell', 'Nuevo', 69000);
------------------------------------------------ Tabla Productos Nuevos - Fin -------------------------------------------------

----------------------------------------------- Tabla Productos Usados - Inicio -----------------------------------------------
INSERT INTO productos_usados(codigo, nombre, cantidad_stock, accesorios, estado, precio)
    VALUES('H56Y','Consola Play Station 5', 2,'Control', 'Usado sin ningun problema', 15000);
INSERT INTO productos_usados(codigo, nombre, cantidad_stock, accesorios, estado, precio)
    VALUES('W23A','Teclado pc de USB', 1,'Teclado', 'Con un pequeño golpe en la caratula',5000);
INSERT INTO productos_usados(codigo, nombre, cantidad_stock, accesorios, estado, precio)
    VALUES('D45S','Cable de video', 5,'Cable', 'Cable sin ningun daño', 5000);
INSERT INTO productos_usados(codigo, nombre, cantidad_stock, accesorios, estado, precio)
    VALUES('Y76G','Control de consola XBox', 2, 'Control','Sin ningun inconveniente', 15000);
INSERT INTO productos_usados(codigo, nombre, cantidad_stock, accesorios, estado, precio)
    VALUES('J78B','Monitor HP', 2, 'Monitor y cable de video', 'Monitor con su cable de video en excelente estado', 25000);
------------------------------------------------ Tabla Productos Usados - Fin -------------------------------------------------

----------------------------------------------- Tabla Repuestos Nuevos - Inicio -----------------------------------------------
INSERT INTO repuestos_nuevos(codigo, nombre, cantidad_stock, accesorios, estado, precio)
    VALUES('G23R','Play Station 4', 50, 'Mando de la Play4', 'Nuevo', 15000);
INSERT INTO repuestos_nuevos(codigo, nombre, cantidad_stock, accesorios, estado, precio)
    VALUES('F53C','Nintendo Wii', 20, 'Cable de video', 'Nuevo', 150000);
INSERT INTO repuestos_nuevos(codigo, nombre, cantidad_stock, accesorios, estado, precio)
    VALUES('A56D','Control de XBox',25,'Control para el XBox', 'Nuevo', 15000);
INSERT INTO repuestos_nuevos(codigo, nombre, cantidad_stock, accesorios, estado, precio)
    VALUES('ZPF','Tablet Alcatel', 13, 'Tableta con sus respectivos cables', 'Nuevo', 79000);
INSERT INTO repuestos_nuevos(codigo, nombre, cantidad_stock, accesorios, estado, precio)
    VALUES('N11M','Monitor Dell', 50,'Panalla Dell', 'Nuevo', 69000);
------------------------------------------------ Tabla Repuestos Nuevos - Fin -------------------------------------------------

----------------------------------------------- Tabla Repuestos Usados - Inicio -----------------------------------------------
INSERT INTO repuestos_usados(codigo, nombre, cantidad_stock, accesorios, estado, precio)
    VALUES('F53C','Nintendo Wii', 20, 'Cable de video', 'Cable en perfecto estado', 150000);
INSERT INTO repuestos_usados(codigo, nombre, cantidad_stock, accesorios, estado, precio)
    VALUES('W23A','Teclado pc de USB', 1,'Teclado', 'Con un pequeño golpe en la caratula',5000);
INSERT INTO repuestos_usados(codigo, nombre, cantidad_stock, accesorios, estado, precio)
    VALUES('N11M','Monitor Dell', 50,'Panalla Dell', 'Pantalla sin ningun inconveniente', 69000);
INSERT INTO repuestos_usados(codigo, nombre, cantidad_stock, accesorios, estado, precio)
    VALUES('Y76G','Control de consola XBox', 2, 'Control', 'Sin ningun inconveniente', 15000);
INSERT INTO repuestos_usados(codigo, nombre, cantidad_stock, accesorios, estado, precio)
    VALUES('D45S','Cable de video', 5,'Cable', 'Cable sin ningun daño', 5000);
------------------------------------------------ Tabla Repuestos Usados - Fin -------------------------------------------------

----------------------------------------------- Tabla Reporte Técnico - Inicio ------------------------------------------------
INSERT INTO reporte_tecnico(problema_diagnostico, descripcion, costo)
    VALUES('Sin funcionamiento en el monitor, no hay video', 'Cable de video sin reflejo',15000);
INSERT INTO reporte_tecnico(problema_diagnostico, descripcion, costo)
    VALUES('Control de consola PS5 5 sin respuesta','Control de la consola PS5 sin fucion de los botones', 25000);
INSERT INTO reporte_tecnico(problema_diagnostico, descripcion, costo)
    VALUES('Tarjeta madre sin funcionamiento', 'CPU no corre', 35000);
INSERT INTO reporte_tecnico(problema_diagnostico, descripcion, costo)
    VALUES('Bateeria de la consola sin funcion', 'Nnintedo Switch sin respuesta luego de encender', 25000);
INSERT INTO reporte_tecnico(problema_diagnostico, descripcion, costo)
    VALUES('Portatil HP sin respuesta al encender por problemas en la bateria', 'Portatil HP no enciende', 45000);
------------------------------------------------- Tabla Reporte Técnico - Fin -------------------------------------------------

--------------------------------------------------- Tabla Usuarios - Inicio ---------------------------------------------------
INSERT INTO usuarios(usuario, contrasena) VALUES('monsty12', '123');
INSERT INTO usuarios(usuario, contrasena) VALUES('morali65', '3215');
INSERT INTO usuarios(usuario, contrasena) VALUES('monchi11', '456');
---------------------------------------------------- Tabla Usuarios - Fin -----------------------------------------------------

---------------------------------------------------- Tabla Estado - Inicio ----------------------------------------------------
INSERT INTO estado(clientes_id, descripcion) VALUES(1,'Cable de video sin reflejo');
INSERT INTO estado(clientes_id, descripcion) VALUES(2,'Control de la consola Play Station 5 sin  fucion de los botones');
INSERT INTO estado(clientes_id, descripcion) VALUES(3,'CPU no corre');
INSERT INTO estado(clientes_id, descripcion) VALUES(4,'Nnintedo Switch sin respuesta luego de encender');
INSERT INTO estado(clientes_id, descripcion) VALUES(5,'Portatil HP no enciende');
----------------------------------------------------- Tabla Estado - Fin ------------------------------------------------------

---------------------------------------------------- Tabla Tienda - Inicio ----------------------------------------------------
INSERT INTO tienda(taller_id, inventario_id, clientes_id) VALUES(15,20,1);
INSERT INTO tienda(taller_id, inventario_id, clientes_id) VALUES(16,21,2);
INSERT INTO tienda(taller_id, inventario_id, clientes_id) VALUES(17,22,3);
INSERT INTO tienda(taller_id, inventario_id, clientes_id) VALUES(18,23,4);
INSERT INTO tienda(taller_id, inventario_id, clientes_id) VALUES(19,24,5);
----------------------------------------------------- Tabla Tienda - Fin ------------------------------------------------------

---------------------------------------------------- Tabla Taller - Inicio ----------------------------------------------------
INSERT INTO taller(equipos_id, clientes_id) VALUES(85,1);
INSERT INTO taller(equipos_id, clientes_id) VALUES(86,2);
INSERT INTO taller(equipos_id, clientes_id) VALUES(87,3);
INSERT INTO taller(equipos_id, clientes_id) VALUES(88,4);
INSERT INTO taller(equipos_id, clientes_id) VALUES(89,5);
----------------------------------------------------- Tabla Taller - Fin ------------------------------------------------------

-------------------------------------------------- Tabla Inventario - Inicio --------------------------------------------------
INSERT INTO inventario(productos_nuevos_id, productos_usados_id, repuestos_usados_id, repuestos_nuevos_id) VALUES(1,6,11,17);
INSERT INTO inventario(productos_nuevos_id, productos_usados_id, repuestos_usados_id, repuestos_nuevos_id) VALUES(2,7,12,18);
INSERT INTO inventario(productos_nuevos_id, productos_usados_id, repuestos_usados_id, repuestos_nuevos_id) VALUES(3,8,13,19);
INSERT INTO inventario(productos_nuevos_id, productos_usados_id, repuestos_usados_id, repuestos_nuevos_id) VALUES(4,9,14,20);
INSERT INTO inventario(productos_nuevos_id, productos_usados_id, repuestos_usados_id, repuestos_nuevos_id) VALUES(5,10,15,21);
--------------------------------------------------- Tabla Inventario - Fin ----------------------------------------------------

--------------------------------------------------- Tabla Factura - Inicio ----------------------------------------------------
INSERT INTO factura(clientes_id, descripcion, costo, iva, total)
    VALUES(0,'Cable de video sin reflejo', 15000, 13, 16000);
INSERT INTO factura(clientes_id, descripcion, costo, iva, total)
    VALUES(1,'Control de la consola Play Station 5 sin fucion de los botones', 25000, 13, 26000);
INSERT INTO factura(clientes_id, descripcion, costo, iva, total)
    VALUES(2,'CPU no corre', 35000, 13, 36000);
INSERT INTO factura(clientes_id, descripcion, costo, iva, total)
    VALUES(3,'Nnintedo Switch sin respuesta luego de encender', 25000, 13, 26000);
INSERT INTO factura(clientes_id, descripcion, costo, iva, total)
    VALUES(4,'Portatil HP no enciende', 45000, 13, 46000);
----------------------------------------------------- Tabla Factura - Fin -----------------------------------------------------

--------------------------------------------------- Tabla Equipos - Inicio ----------------------------------------------------
INSERT INTO equipos(reporte_tecnico_id, estado_id, numero_serie, modelo, descripcion_problema, accesorios)
    VALUES(22,0,'56Nf','Modelo 500','Sin funcionamiento de a tarjeta madre','Tarjeta');
INSERT INTO equipos(reporte_tecnico_id, estado_id, numero_serie, modelo, descripcion_problema, accesorios)
    VALUES(23,1,'57hf','Modelo 600','Control de consola Xbox sin respuesta al dispositivo','Control de consola Xbox');
INSERT INTO equipos(reporte_tecnico_id, estado_id, numero_serie, modelo, descripcion_problema, accesorios)
    VALUES(24,2,'23Ni','Modelo 700','Luces del Nintendo DSi sin funcionamiento','Caratula y luces');
INSERT INTO equipos(reporte_tecnico_id, estado_id, numero_serie, modelo, descripcion_problema, accesorios)
    VALUES(25,3,'78lk','Modelo 800','Nintendo Switch con bateria de muy poca duracion','Cargador');
INSERT INTO equipos(reporte_tecnico_id, estado_id, numero_serie, modelo, descripcion_problema, accesorios)
    VALUES(26,4,'98fh','Modelo 900','Monitor Dell sin respuesta de video','Cable de video');
----------------------------------------------------- Tabla Equipos - Fin -----------------------------------------------------

----------------------------------------------------- Tabla Cola - Inicio -----------------------------------------------------
INSERT INTO cola(equipos_id, guia_cola) VALUES(85,'primero en atender');
INSERT INTO cola(equipos_id, guia_cola) VALUES(86,'segundo en atender');
INSERT INTO cola(equipos_id, guia_cola) VALUES(87,'tercero en atender');
INSERT INTO cola(equipos_id, guia_cola) VALUES(88,'cuarto en atender');
INSERT INTO cola(equipos_id, guia_cola) VALUES(89,'quinto en atender');
------------------------------------------------------ Tabla Cola - Fin -------------------------------------------------------
------------------------------------------ Inserciones de Datos en las Tablas - Fin -------------------------------------------

--------------------------------------- Creación de Procedimientos Almacenados - Inicio ---------------------------------------
-------------------------------------- Procedimientos Almacenados para Clientes - Inicio --------------------------------------
----------------------------------------------------------- INSERT ------------------------------------------------------------
CREATE OR REPLACE PROCEDURE INSERTclientes(
    p_nombre CLIENTES.NOMBRE%TYPE,
    p_primer_apellido CLIENTES.PRIMER_APELLIDO%TYPE,
    p_segundo_apellido CLIENTES.SEGUNDO_APELLIDO%TYPE,
    p_correo CLIENTES.CORREO%TYPE,
    p_telefono CLIENTES.TELEFONO%TYPE)
IS
BEGIN
    INSERT INTO CLIENTES(NOMBRE, PRIMER_APELLIDO, SEGUNDO_APELLIDO, CORREO, TELEFONO)
    VALUES (p_nombre, p_primer_apellido, p_segundo_apellido, p_correo, p_telefono);
    COMMIT;
END;
EXECUTE INSERTclientes('Elci','Garro','Mata','egarrom@gmail.com',33333333);

----------------------------------------------------------- UPDATE ------------------------------------------------------------
CREATE OR REPLACE PROCEDURE UPDATEclientes(
    p_id IN CLIENTES.ID%TYPE,
    p_nombre IN CLIENTES.NOMBRE%TYPE,
    p_primer_apellido IN CLIENTES.PRIMER_APELLIDO%TYPE,
    p_segundo_apellido IN CLIENTES.SEGUNDO_APELLIDO%TYPE,
    p_correo IN CLIENTES.CORREO%TYPE,
    p_telefono IN CLIENTES.TELEFONO%TYPE)
IS
BEGIN
    UPDATE clientes SET NOMBRE = p_nombre, PRIMER_APELLIDO = p_primer_apellido,
        SEGUNDO_APELLIDO = p_segundo_apellido, CORREO = p_correo, TELEFONO = p_telefono
    WHERE ID = p_id;
    COMMIT;
END;

----------------------------------------------------------- SELECT ------------------------------------------------------------
CREATE OR REPLACE PROCEDURE SELECTclientes(p_id IN CLIENTES.ID%TYPE, p_clientes_display OUT SYS_REFCURSOR)
IS
BEGIN
    OPEN p_clientes_display for SELECT ID, NOMBRE, PRIMER_APELLIDO,
        SEGUNDO_APELLIDO, CORREO, TELEFONO FROM CLIENTES
    WHERE ID = p_id;
END;

----------------------------------------------------------- DELETE ------------------------------------------------------------
CREATE OR REPLACE PROCEDURE DELETEclientes(p_id IN CLIENTES.ID%TYPE)
IS
BEGIN
    DELETE FROM CLIENTES WHERE ID = p_id;
END;
EXECUTE DELETEclientes(8);
--------------------------------------- Procedimientos Almacenados para Clientes - Fin ----------------------------------------

---------------------------------- Procedimientos Almacenados para Productos Nuevos - Inicio ----------------------------------
----------------------------------------------------------- INSERT ------------------------------------------------------------
CREATE OR REPLACE PROCEDURE INSERTproductos_nuevos( 
    p_codigo PRODUCTOS_NUEVOS.CODIGO%TYPE,
    p_nombre PRODUCTOS_NUEVOS.NOMBRE%TYPE,
    p_cantidad_stock PRODUCTOS_NUEVOS.CANTIDAD_STOCK%TYPE,
    p_accesorios PRODUCTOS_NUEVOS.ACCESORIOS%TYPE,
    p_estado PRODUCTOS_NUEVOS.ESTADO%TYPE,
    p_precio PRODUCTOS_NUEVOS.PRECIO%TYPE)
IS
BEGIN
    insert into productos_nuevos(codigo, nombre, cantidad_stock, accesorios, estado, precio)
    VALUES(p_codigo, p_nombre, p_cantidad_stock, p_accesorios, p_estado, p_precio);
    COMMIT;
END;
EXECUTE INSERTproductos_nuevos(96, 'Tablet', 5, 'cargador', 'nuevo', 25000);

----------------------------------------------------------- UPDATE ------------------------------------------------------------
CREATE OR REPLACE PROCEDURE UPDATEproductos_nuevos(
    p_id IN PRODUCTOS_NUEVOS.ID%TYPE,
    p_codigo IN PRODUCTOS_NUEVOS.CODIGO%TYPE,
    p_nombre IN PRODUCTOS_NUEVOS.NOMBRE%TYPE,
    p_cantidad_stock IN PRODUCTOS_NUEVOS.CANTIDAD_STOCK%TYPE,
    p_accesorios IN PRODUCTOS_NUEVOS.ACCESORIOS%TYPE,
    p_estado IN PRODUCTOS_NUEVOS.ESTADO%TYPE, 
    p_precio IN PRODUCTOS_NUEVOS.PRECIO%TYPE)
IS
BEGIN
    UPDATE productos_nuevos SET CODIGO = p_codigo, NOMBRE = p_nombre, CANTIDAD_STOCK = p_cantidad_stock,
        ACCESORIOS = p_accesorios, ESTADO = p_estado, PRECIO = p_precio
    WHERE ID = p_id;
    COMMIT;
END;
EXECUTE UPDATEproductos_nuevos(96, 'cELULAR', 5, 'cargador', 'nuevo', 25000);

----------------------------------------------------------- SELECT ------------------------------------------------------------
CREATE OR REPLACE PROCEDURE SELECTproductos_nuevos(
    p_id IN PRODUCTOS_NUEVOS.ID%TYPE,
    p_productos_nuevos_display OUT SYS_REFCURSOR)
IS
BEGIN
    OPEN p_productos_nuevos_display for SELECT id, codigo, nombre, cantidad_stock,
        accesorios, estado, precio FROM PRODUCTOS_NUEVOS
    WHERE ID = p_id;
END;

----------------------------------------------------------- DELETE ------------------------------------------------------------
CREATE OR REPLACE PROCEDURE DELETEproductos_nuevos(p_id IN PRODUCTOS_NUEVOS.ID%TYPE)
IS
BEGIN
    DELETE FROM PRODUCTOS_NUEVOS WHERE ID = p_id;
END;
EXECUTE DELETEproductos_nuevos(8);
----------------------------------- Procedimientos Almacenados para Productos Nuevos - Fin ------------------------------------

---------------------------------- Procedimientos Almacenados para Productos Usados - Inicio ----------------------------------
----------------------------------------------------------- INSERT ------------------------------------------------------------
CREATE OR REPLACE PROCEDURE INSERTproductos_usados( 
    p_id PRODUCTOS_USADOS.ID%TYPE,
    p_codigo PRODUCTOS_USADOS.CODIGO%TYPE,
    p_nombre PRODUCTOS_USADOS.NOMBRE%TYPE,
    p_cantidad_stock PRODUCTOS_USADOS.CANTIDAD_STOCK%TYPE,
    p_accesorios PRODUCTOS_USADOS.ACCESORIOS%TYPE,
    p_estado PRODUCTOS_USADOS.ESTADO%TYPE,
    p_precio PRODUCTOS_USADOS.PRECIO%TYPE)
IS
BEGIN
    INSERT INTO productos_usados(codigo, nombre, cantidad_stock, accesorios, estado, precio)
    VALUES(p_codigo, p_nombre, p_cantidad_stock, p_accesorios, p_estado, p_precio);
    COMMIT;
END;
EXECUTE INSERTproductos_usados(96, 'Tablet', 5, 'cargador', 'nuevo', 25000);

----------------------------------------------------------- UPDATE ------------------------------------------------------------
CREATE OR REPLACE PROCEDURE UPDATEproductos_usados(
    p_id IN PRODUCTOS_USADOS.ID%TYPE,
    p_codigo IN PRODUCTOS_USADOS.CODIGO%TYPE,
    p_nombre IN PRODUCTOS_USADOS.NOMBRE%TYPE,
    p_cantidad_stock IN PRODUCTOS_USADOS.CANTIDAD_STOCK%TYPE,
    p_accesorios IN PRODUCTOS_USADOS.ACCESORIOS%TYPE,
    p_estado IN PRODUCTOS_USADOS.ESTADO%TYPE,
    p_precio IN PRODUCTOS_USADOS.PRECIO%TYPE)
IS
BEGIN
    UPDATE productos_usados SET CODIGO = p_codigo, NOMBRE = p_nombre,CCANTIDAD_STOCK = p_cantidad_stock,
        ACCESORIOS = p_accesorios, ESTADO = p_estado, PRECIO = p_precio
    WHERE ID = p_id;
COMMIT;
END; 
EXECUTE UPDATEproductos_usados(96, 'cELULAR', 5, 'cargador', 'nuevo', 25000);

----------------------------------------------------------- SELECT ------------------------------------------------------------
CREATE OR REPLACE PROCEDURE SELECTproductos_usados(
    p_id IN PRODUCTOS_USADOS.ID%TYPE,
    p_productos_usados_display OUT SYS_REFCURSOR)
IS
BEGIN
    OPEN p_productos_usados_display for SELECT id, codigo, nombre,
    cantidad_stock, accesorios, estado, precio FROM PRODUCTOS_USADOS
    WHERE ID = p_id;
END;

----------------------------------------------------------- DELETE ------------------------------------------------------------
CREATE OR REPLACE PROCEDURE DELETEproductos_usados(p_id IN PRODUCTOS_USADOS.ID%TYPE)
IS
BEGIN
    DELETE FROM PRODUCTOS_USADOS WHERE ID = p_id;
END;
EXECUTE DELETEproductos_usados(8);
----------------------------------- Procedimientos Almacenados para Productos Usados - Fin ------------------------------------

---------------------------------- Procedimientos Almacenados para Repuestos Nuevos - Inicio ----------------------------------
----------------------------------------------------------- INSERT ------------------------------------------------------------
CREATE OR REPLACE PROCEDURE INSERTrepuestos_nuevos(
    p_codigo REPUESTOS_NUEVOS.CODIGO%TYPE,
    p_nombre REPUESTOS_NUEVOS.NOMBRE%TYPE,
    p_cantidad_stock REPUESTOS_NUEVOS.CANTIDAD_STOCK%TYPE,
    p_accesorios REPUESTOS_NUEVOS.ACCESORIOS%TYPE,
    p_estado REPUESTOS_NUEVOS.ESTADO%TYPE,
    p_precio REPUESTOS_NUEVOS.PRECIO%TYPE)
IS  
BEGIN  
    INSERT INTO repuestos_nuevos(codigo, nombre, cantidad_stock, accesorios, estado, precio)
    VALUES(p_codigo, p_nombre, p_cantidad_stock, p_accesorios, p_estado, p_precio);
    COMMIT;
END;
EXECUTE INSERTrepuestos_nuevos(96, 'Tablet', 5, 'cargador', 'nuevo', 25000);

----------------------------------------------------------- UPDATE ------------------------------------------------------------
CREATE OR REPLACE PROCEDURE UPDATErepuestos_nuevos(
    p_id IN REPUESTOS_NUEVOS.ID%TYPE,
    p_codigo IN REPUESTOS_NUEVOS.CODIGO%TYPE,
    p_nombre IN REPUESTOS_NUEVOS.NOMBRE%TYPE,
    p_cantidad_stock IN REPUESTOS_NUEVOS.CANTIDAD_STOCK%TYPE,
    p_accesorios IN REPUESTOS_NUEVOS.ACCESORIOS%TYPE,
    p_estado IN REPUESTOS_NUEVOS.ESTADO%TYPE,
    p_precio IN REPUESTOS_NUEVOS.PRECIO%TYPE)
IS
BEGIN
    UPDATE repuestos_nuevos SET CODIGO = p_codigo, NOMBRE = p_nombre, CANTIDAD_STOCK = p_cantidad_stock,
        ACCESORIOS = p_accesorios, ESTADO = p_estado, PRECIO = p_precio
    WHERE ID = p_id;
    COMMIT;
END;
EXECUTE UPDATErepuestos_nuevos(96, 'Celular', 5, 'cargador', 'nuevo', 25000);

----------------------------------------------------------- SELECT ------------------------------------------------------------
CREATE OR REPLACE PROCEDURE SELECTrepuestos_nuevos(
    p_id IN REPUESTOS_NUEVOS.ID%TYPE,
    p_repuestos_nuevos_display OUT SYS_REFCURSOR)
IS
BEGIN
    OPEN p_repuestos_nuevos_display for SELECT id, codigo, nombre, cantidad_stock,
        accesorios, estado, precio FROM REPUESTOS_NUEVOS
    WHERE ID = p_id;
END;

----------------------------------------------------------- DELETE ------------------------------------------------------------
CREATE OR REPLACE PROCEDURE DELETErepuestos_nuevos(p_id IN REPUESTOS_NUEVOS.ID%TYPE)    
IS
BEGIN
    DELETE FROM REPUESTOS_NUEVOS WHERE ID = p_id;
END;
EXECUTE DELETErepuestos_nuevos(8);
----------------------------------- Procedimientos Almacenados para Repuestos Nuevos - Fin ------------------------------------

---------------------------------- Procedimientos Almacenados para Repuestos Usados - Inicio ----------------------------------
----------------------------------------------------------- INSERT ------------------------------------------------------------
CREATE OR REPLACE PROCEDURE INSERTrepuestos_usados(
    p_codigo REPUESTOS_USADOS.CODIGO%TYPE,
    p_nombre REPUESTOS_USADOS.NOMBRE%TYPE,
    p_cantidad_stock REPUESTOS_USADOS.CANTIDAD_STOCK%TYPE,
    p_accesorios REPUESTOS_USADOS.ACCESORIOS%TYPE,
    p_estado REPUESTOS_USADOS.ESTADO%TYPE,
    p_precio REPUESTOS_USADOS.PRECIO%TYPE)
IS
BEGIN
    INSERT INTO repuestos_usados(codigo, nombre, cantidad_stock, accesorios, estado, precio)
    VALUES(p_codigo, p_nombre, p_cantidad_stock, p_accesorios, p_estado, p_precio);
    COMMIT;
END;
EXECUTE INSERTrepuestos_usados(96, 'Tablet', 5, 'cargador', 'nuevo', 25000);

----------------------------------------------------------- UPDATE ------------------------------------------------------------
CREATE OR REPLACE PROCEDURE UPDATErepuestos_nuevos(
    p_id IN REPUESTOS_USADOS.ID%TYPE,
    p_codigo IN REPUESTOS_USADOS.CODIGO%TYPE,
    p_nombre IN REPUESTOS_USADOS.NOMBRE%TYPE,
    p_cantidad_stock IN REPUESTOS_USADOS.CANTIDAD_STOCK%TYPE,
    p_accesorios IN REPUESTOS_USADOS.ACCESORIOS%TYPE,
    p_estado IN REPUESTOS_USADOS.ESTADO%TYPE,
    p_precio IN REPUESTOS_USADOS.PRECIO%TYPE)
IS
BEGIN
    UPDATE repuestos_usados SET CODIGO = p_codigo, NOMBRE = p_nombre, CANTIDAD_STOCK = p_cantidad_stock,
        ACCESORIOS = p_accesorios, ESTADO = p_estado, PRECIO = p_precio
    WHERE ID = p_id;
    COMMIT;
END;
EXECUTE UPDATErepuestos_usados(96, 'cELULAR', 5, 'cargador', 'nuevo', 25000);

----------------------------------------------------------- SELECT ------------------------------------------------------------
CREATE OR REPLACE PROCEDURE SELECTrepuestos_usados(
    p_id IN REPUESTOS_USADOS.ID%TYPE,
    p_repuestos_usados_display OUT SYS_REFCURSOR)
IS
BEGIN
    OPEN p_repuestos_usados_display for SELECT id, codigo, nombre, cantidad_stock,
        accesorios, estado, precio FROM REPUESTOS_USADOS
    WHERE ID = p_id;
END;

----------------------------------------------------------- DELETE ------------------------------------------------------------
CREATE OR REPLACE PROCEDURE DELETErepuestos_usados(p_id IN REPUESTOS_USADOS.ID%TYPE)
IS
BEGIN
    DELETE FROM REPUESTOS_USADOS WHERE ID = p_id;
END;
EXECUTE DELETEproductos_usados(8);
----------------------------------- Procedimientos Almacenados para Repuestos Usados - Fin ------------------------------------
---------------------------------------- Creación de Procedimientos Almacenados - Fin -----------------------------------------

------------------------------------------------ Creación de Triggers - Inicio ------------------------------------------------
---------------------------------------- Triggers de Auditoría para Clientes - Inicio -----------------------------------------
CREATE OR REPLACE TRIGGER trg_borrar_clientes BEFORE DELETE ON clientes FOR EACH ROW
DECLARE
    v_username VARCHAR2(50);
BEGIN
    SELECT USER INTO v_username FROM dual;
    INSERT INTO log_clientes(id, nombre, primer_apellido, segundo_apellido,
        correo, telefono, accion_realizada, usuario_elimina, fecha_elimina)
    VALUES(:OLD.id, :OLD.nombre, :OLD.primer_apellido, :OLD.segundo_apellido, :OLD.correo,
        :OLD.telefono, 'Se eliminó el registro de clientes', v_username, SYSDATE);
END;

CREATE OR REPLACE TRIGGER trg_actualizar_clientes AFTER UPDATE ON clientes FOR EACH ROW
DECLARE
   v_username VARCHAR2(50);
BEGIN
    SELECT USER INTO v_username FROM dual;
    INSERT INTO log_clientes(id, nombre, primer_apellido, segundo_apellido,
        correo, telefono, accion_realizada, usuario_elimina, fecha_elimina)
    VALUES(:NEW.id, :NEW.nombre, :NEW.primer_apellido, :NEW.segundo_apellido, :NEW.correo,
        :NEW.telefono, 'Se actualizó el registro de clientes', v_username, SYSDATE);
END;

SELECT * FROM CLIENTES;
SELECT * FROM log_clientes;
EXECUTE INSERTclientes('PRUEBA','PRUEBA','PRUEBA','PRUEBA@gmail.com',99999999);
EXECUTE DELETEclientes(6);
------------------------------------------ Triggers de Auditoría para Clientes - Fin ------------------------------------------
------------------------------------------------- Creación de Triggers - Fin --------------------------------------------------

------------------------------------------------ Creación de Paquetes - Inicio ------------------------------------------------
----------------------------------------------- Paquete para Facturas - Inicio ------------------------------------------------
CREATE OR REPLACE PACKAGE FACTURAS
IS
    FUNCTION IMPUESTO(COSTO NUMBER) RETURN DECIMAL;
END;

CREATE OR REPLACE PACKAGE BODY FACTURAS
IS
    FUNCTION IMPUESTO(COSTO NUMBER) RETURN DECIMAL
    IS
        IMPUESTO_IVA NUMBER(10,2);
    BEGIN
        IMPUESTO_IVA := COSTO * 0.13;
        RETURN IMPUESTO_IVA;
    END;
END;
------------------------------------------------- Paquete para Facturas - Fin -------------------------------------------------
------------------------------------------------- Creación de Paquetes - Fin --------------------------------------------------

----------------------------------------------- Creación de Funciones - Inicio ------------------------------------------------
DECLARE
    IMP_IVA  DECIMAL;
BEGIN
    IMP_IVA := FACTURAS.IMPUESTO(10000);
    DBMS_OUTPUT.PUT_LINE('El iva del 13% es..: '||IMP_IVA);   
END;
------------------------------------------------- Creación de Funciones - Fin -------------------------------------------------